/*
 * Copyright (c) 2022 Pete Johanson
 * 
 * Customizations: Christian Geuer-Pollmann
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "german-keymap.h"


#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3


#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,matrix_transform = &ortho_transform;
    };

    macros {
      ZMK_MACRO(thumbs_up,
		wait-ms = <1>;
		tap-ms = <5>;
        bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
		)
    };
    
    tap_dances {
    	shifty: shift_caps_word {
		compatible = "zmk,behavior-tap-dance";
		label = "TD_SHIFTY";
		#binding-cells = <0>;
		tapping-term-ms = <150>;
		bindings = <&kp LSHFT>, <&caps_word>;
	};
   };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
 &kp ESC    &kp DE_Q       &kp DE_W      &kp DE_F       &kp DE_P          &kp DE_B          &kp DE_J            &kp DE_L          &kp DE_U          &kp DE_Y          &kp DE_SS        &kp DE_PLUS
 &kp TAB    &kp DE_A       &kp DE_R      &kp DE_S       &kp DE_T          &kp DE_G          &kp DE_M            &kp DE_N          &kp DE_E          &kp DE_I          &kp DE_O         &kp DE_HASH
 &kp LSHFT  &kp DE_Z       &kp DE_X      &kp DE_C       &kp DE_D          &kp DE_V          &kp DE_K            &kp DE_H          &kp DE_COMM       &kp DE_DOT        &kp FSLH         &kp RET
 &kp LCTRL  &mo SYM_L      &kp LGUI      &kp LALT       &mo NAV_L         &kp SPACE         &kp RET             &mo NUM_L         &kp LEFT          &kp UP            &kp DOWN         &kp RIGHT
            >;
        };

        lower_layer {
            label = "LOWER";
            bindings = <
&bt BT_CLR     &trans     &trans     &trans      &trans          &trans       &trans     &trans         &trans      &trans     &trans     &kp DEL
&trans         &trans     &trans     &trans      &trans          &trans       &trans     &kp LEFT       &kp DOWN    &kp UP     &kp RIGHT  &trans
&trans         &bt BT(0)  &bt BT(1)  &bt BT(2)   &bt BT(3)       &bt BT(4)    &trans     &kp HOME       &kp PG_DN   &kp PG_UP  &kp END    &trans
&trans         &trans     &trans     &trans      &trans          &trans       &trans     &trans         &trans      &trans     &trans     &trans
            >;
        };

        raise_layer {
            label = "RAISE";
            bindings = <
&trans        &kp LBKT   &trans      &trans       &trans        &kp RBKT    &kp C_PREV    &kp N7     &kp N8      &kp N9       &trans     &trans
&trans        &kp MINUS  &trans      &trans       &trans        &kp EQUAL   &kp C_NEXT    &kp N4     &kp N5      &kp N6       &trans     &trans
&trans        &kp GRAVE  &trans      &trans       &trans        &kp BSLH    &trans        &kp N1     &kp N2      &kp N3       &trans     &trans
&trans        &trans     &trans      &kp N0       &trans        &none       &none         &kp ESC    &kp DEL     &trans       &trans     &trans
            >;
        };

        adjust_layer {
            label = "ADJUST";
            bindings = <
&trans     &kp LBRC   &kp AMPS   &kp STAR    &kp LPAR     &kp RBRC     &trans     &trans    &trans       &trans       &trans     &bootloader
&trans     &kp COLON  &kp DLLR   &kp PRCNT   &kp CARET    &kp PLUS     &trans     &trans    &trans       &trans       &trans     &trans
&trans     &kp TILDE  &kp EXCL   &kp AT      &kp HASH     &kp PIPE     &trans     &trans    &trans       &trans       &trans     &trans
&trans     &trans     &trans     &kp RPAR    &trans       &trans       &trans     &trans    &trans       &trans       &trans     &trans
            >;
        };


    };
};